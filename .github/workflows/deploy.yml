name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: us-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          $(aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $secrets.AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com)

      - name: Build, tag, and push image to Amazon ECR
        env:
          AWS_REGION: us-west-2
          IMAGE_REPO_NAME: your-ecr-repo-name
        run: |
          docker build -t $IMAGE_REPO_NAME .
          docker tag $IMAGE_REPO_NAME:latest $secrets.AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
          docker push $secrets.AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest

      - name: Deploy to ECS
        env:
          AWS_REGION: us-west-2
          CLUSTER_NAME: your-cluster-name
          SERVICE_NAME: your-service-name
          TASK_DEFINITION: your-task-definition-family
          CONTAINER_NAME: your-container-name
          IMAGE_URI: $secrets.AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
        run: |
          TASK_DEFINITION_JSON=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION)
          NEW_TASK_DEFINTION=$(echo $TASK_DEFINITION_JSON | jq --arg IMAGE_URI "$IMAGE_URI" '.taskDefinition | .containerDefinitions[0].image=$IMAGE_URI | del(.status, .revision, .taskDefinitionArn)')
          aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEFINTION"
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $AWS_REGION
