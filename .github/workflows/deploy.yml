name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Install AWS Copilot CLI
        run: |
          sudo curl -Lo /usr/local/bin/copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux
          sudo chmod +x /usr/local/bin/copilot

      - name: Verify Copilot Installation
        run: |
          copilot --version

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: us-west-2
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build and push Docker images
        env:
          AWS_REGION: us-west-2
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          IMAGE_REPO_NAME: your-ecr-repo-name
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Initialize Copilot
        env:
          AWS_REGION: us-west-2
        run: |
          copilot init --app your-app-name --type "Load Balanced Web Service" --name your-service-name --dockerfile ./Dockerfile --port 80

      - name: Deploy with Copilot
        env:
          AWS_REGION: us-west-2
        run: |
          copilot deploy --name your-service-name --env test

