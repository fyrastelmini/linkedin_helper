name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install ECS CLI
        run: |
          sudo curl -Lo /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
          sudo chmod +x /usr/local/bin/ecs-cli

      - name: Verify ECS CLI Installation
        run: |
          ecs-cli --version

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: us-west-2
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build and push Docker images
        env:
          AWS_REGION: us-west-2
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          IMAGE_REPO_NAME: your-ecr-repo-name
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Convert Docker Compose to ECS Task Definition
        run: |
          ecs-cli configure --cluster your-cluster-name --region ${{ secrets.AWS_REGION }}

      - name: Deploy to ECS
        env:
          AWS_REGION: us-west-2
          CLUSTER_NAME: your-cluster-name
          SERVICE_NAME: your-service-name
          TASK_DEFINITION: your-task-definition-family
        run: |
          ecs-cli compose --file docker-compose.yml service up
          ecs-cli compose --file docker-compose.yml service scale 1
